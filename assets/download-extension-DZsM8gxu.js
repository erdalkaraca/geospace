import{r as f,c as r,b as p,t as w}from"./main-DJKOehCJ.js";import{y as u,N as h}from"./index-BBymxG1x.js";f({command:{id:"download",name:"Download File",description:"Download a file from a URL to the workspace",parameters:[{name:"url",description:"the URL of the file to download",required:!0},{name:"filename",description:"optional filename to save as (will be auto-detected if not provided)",required:!1}]},handler:{canExecute:a=>{const o=a.params&&a.params.url;return o?o.startsWith("http://")||o.startsWith("https://"):!1},execute:async a=>{const o=a.params&&a.params.url;if(!o){r("No URL provided.");return}const d=await u.getWorkspace();if(!d){r("No workspace selected.");return}await p.runAsync("Downloading file",async n=>{n.message="Starting download...",n.progress=0;try{const i=await fetch(o,{mode:"cors",credentials:"omit"});if(!i.ok){r("Failed to download file: "+i.statusText);return}let t=a.params&&a.params.filename;if(!t){const s=i.headers.get("content-disposition");if(s){let e=s.match(/filename="([^"]+)"/);e&&e[1]?t=e[1]:(e=s.match(/filename=([^;]+)/),e&&e[1]&&(t=e[1].trim()))}if(!t){const e=new URL(o).pathname.split("/").filter(c=>c.length>0),l=e[e.length-1];l&&l.includes(".")?t=l:t=`downloaded-file-${new Date().toISOString().replace(/[:.]/g,"-").replace("T","_").slice(0,-5)}`}}const m=await d.getResource(t,{create:!0});n.message=`Downloading ${t}...`,n.progress=50,await m.saveContents(i.body,{contentType:h.BINARY}),n.progress=100,w(`File downloaded: ${t}`)}catch(i){throw r("Failed to download file: "+i),i}})}}});
