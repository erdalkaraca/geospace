import{F as p,o as l,x as f,n as c,c as h,t as m}from"./index-C1DvjuJF.js";import{e as C,m as u,j as v}from"./main-Ci7DRhcV.js";var g=Object.defineProperty,y=Object.getOwnPropertyDescriptor,d=(t,e,n,o)=>{for(var s=o>1?void 0:o?y(e,n):e,r=t.length-1,i;r>=0;r--)(i=t[r])&&(s=(o?i(e,n,s):i(s))||s);return o&&s&&g(e,n,s),s};v.registerEditorInputHandler({canHandle:t=>t instanceof p&&t.getName().toLowerCase().endsWith(".md"),handle:async t=>{const e={title:t.getName(),data:t,key:t.getName(),icon:"book",noOverflow:!1,state:{}};return e.widgetFactory=()=>f`
            <k-md-editor .input=${e}></k-md-editor>`,e},ranking:1e3});let a=class extends C{doClose(){this.input=void 0,this.mdContents=void 0}doBeforeUI(){this.loadContent()}async loadContent(){const t=this.input.data;if(t instanceof p){const e=await t.getContents();this.updateContents(e)}else if(typeof t=="string"&&t.startsWith("http")){const n=await(await fetch(t)).text();this.updateContents(n)}else typeof t=="string"&&this.updateContents(t)}render(){return f`
            <div style="max-height: 90vh;">${l(this.mdContents)}</div>`}updateContents(t){this.mdContents=u.parse(t)}};d([c({attribute:!1})],a.prototype,"input",2);d([h()],a.prototype,"mdContents",2);a=d([m("k-md-editor")],a);export{a as KMDEditor};
